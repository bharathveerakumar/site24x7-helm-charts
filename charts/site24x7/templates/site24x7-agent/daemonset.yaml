apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "site24x7.fullname" . }}-agent
  labels:
    {{- include "site24x7Agent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "site24x7.selectorLabels" . | nindent 4 }}
  updateStrategy:
    {{- if not (empty .Values.site24x7Agent.updateStrategy) }}
    {{- toYaml .Values.site24x7Agent.updateStrategy | nindent 4 }}
    {{- else }}
    type: RollingUpdate
    {{- end }}
  template:
    metadata:
      labels:      
        {{- include "site24x7Agent.labels" . | nindent 8 }}
      name: {{ include "site24x7.fullname" . }}-agent
    spec:
      serviceAccountName: {{ include "site24x7.fullname" . }}          
      nodeSelector:
        {{- if not (empty .Values.site24x7Agent.nodeSelector) -}}
        {{- .Values.site24x7Agent.nodeSelector }}
        {{- else -}}
        kubernetes.io/os: linux
        {{- end }}
      tolerations:
        {{- toYaml .Values.site24x7Agent.tolerations | nindent 8 }}
      containers:
      {{- with .Values.site24x7Agent.image }}
      - image: {{ .repository | default "site24x7" }}/{{ .repository | default "site24x7" }}:{{ .tag }}
        imagePullPolicy: {{ .pullPolicy }}
      {{- end }}
        name: site24x7-agent
        securityContext:
        {{- include "site24x7.nodeAgentScc" . | indent 12 }}
        resources:
          requests:
            memory: {{ .Values.site24x7Agent.resources.requests.memory | default "50Mi" }}
            cpu: {{ .Values.site24x7Agent.resources.requests.cpu | default "50m" }}
          limits:
            memory: {{ .Values.site24x7Agent.resources.limits.memory | default "450Mi" }}
            cpu: {{ .Values.site24x7Agent.resources.limits.cpu | default "400m" }}
        env:
          - name: KEY
            valueFrom:
              secretKeyRef:
                name: "{{ include "site24x7.fullname" . }}-agent"
                key: KEY
          - name: installer
            value: kubernetes
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{- if and .Values.site24x7Agent.nonRootSecurityContext .Values.openShift }}
          - name: SERVERLESS
            value: true
          {{- end }}
          {{- if and .Values.http_proxy .Values.https_proxy }}
          - name: http_proxy
            value: {{ .Values.http_proxy }}
          - name: https_proxy
            value: {{ .Values.https_proxy }}
          {{- end }}
          {{- if .Values.site24x7Agent.extraEnv }}
          {{- toYaml .Values.site24x7Agent.extraEnv | nindent 10 }}
          {{- end }}
        volumeMounts:
          - name: clusterconfig
            mountPath: /etc/site24x7/clusterconfig
            readOnly: true
          {{- if .Values.site24x7Agent.nonRootSecurityContext }}
          - name: site24x7-agent
            mountPath: /opt/site24x7/
          {{- end }}
          {{- if not (and .Values.site24x7Agent.nonRootSecurityContext .Values.openShift) }}
          - name: procfs
            mountPath: /host/proc
            readOnly: true
          - name: sysfs
            mountPath: /host/sys/
            readOnly: true
          - name: varfs
            mountPath: /host/var/
            readOnly: true
          - name: etcfs
            mountPath: /host/etc/
            readOnly: true
          {{- end }}
      volumes:
      {{- with .Values }}
        - configMap:
            name: site24x7
            optional: true
          name: clusterconfig
        {{- if .site24x7Agent.nonRootSecurityContext }}
        - emptyDir: {}
          name: site24x7-agent
        {{- end }}
        {{- if not (and .site24x7Agent.nonRootSecurityContext .openShift) }}
        - hostPath:
            path: /proc
          name: procfs
        - hostPath:
            path: /sys/
          name: sysfs
        - hostPath:
            path: /var/
          name: varfs
        - hostPath:
            path: /etc/
          name: etcfs
        {{- end }}
      {{- end }}
